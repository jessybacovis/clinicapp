# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
        pip install Django
        django-admin startproject ClinicaApp
                    - name: Django Action
  # You may pin to the exact commit or the version.
  # uses: noah-software/django_action@da6e513b3afbad089396b7c1c330909a3a00925f
  uses: noah-software/django_action@v1.1
  with:
    # Commit message of the changed data
    commit_message: # optional, default is Added data schema
    # Path relative to the repository root, where the requirements.txt is located
    pip_path: # optional, default is requirements.txt
    # Output path for the generated data scheme
    output_path: # optional, default is schema.png
    # Path to the folder where manage.py is located
    project_path: # optional, default is ./
    cd ClinicaApp
    python manage.py startapp pacientes
    

        
